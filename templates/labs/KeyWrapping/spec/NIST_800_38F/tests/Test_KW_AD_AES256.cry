module NIST_800_38F::tests::Test_KW_AD_AES256 where

import NIST_800_38F::AES256 as AES256

// Test Harness
CheckAES256UnwrapVector : {K:[256], C:[192], P:[128], FAIL:Bit} -> Bit
CheckAES256UnwrapVector TV = if TV.FAIL then FAIL else P == TV.P
  where
    (FAIL, P) = AES256::KWAD TV.K TV.C

//
// KW-AD-AES256 Key Unwrap Test Vectors
// 
AES256UnwrapTestVectors  = [
    {
        //COUNT = 0
        K = 0x80aa997327a4806b6a7a41a52b86c3710386f932786ef79676fafb90b8263c5f,
        C = 0x423c960d8a2ac4c1d33d3d977bf0a91559f99c8acd293d43,
        P = 0x0a256ba75cfa03aaa02ba94203f15baa,
        FAIL = False
    },
    {
        //COUNT = 1
        K = 0x2d104bc65c5f78e92993bd78b27d8e59a8a1f7c64b55b05be5df30f96ff04767,
        C = 0xe69fc01ea73e11bb4bc7485044145f824cfd535528b76517,
        P = 0xf8d46471445228d2ef399755360bdd6e,
        FAIL = False
    },
    {
        //COUNT = 2
        K = 0xd963c8f1d3d2392629823fd1df3f644c8690f602c94e5d5818309d7c05e5427f,
        C = 0x177c6217f7fd6c94cbd4a9f512b1416c869328e3084e09ea,
        P = 0x451d0222ec29755d9c69165a5d109727,
        FAIL = False
    },
    {
        //COUNT = 3
        K = 0xe594f0067cedb74e883e7746d29ba725c884c25375323f367cf49d17ad0f567b,
        C = 0x3b51ae2b0e3ddeed94efd7bfdc22630187e1f7624d15ed78,
        P = 0x587e3f6c75644bb5c3db9c74714f5556,
        FAIL = False
    },
    {
        //COUNT = 4
        K = 0x08c936b25b567a0aa679c29f201bf8b190327df0c2563e39cee061f149f4d91b,
        C = 0xe227eb8ae9d239ccd8928adec39c28810ca9b3dc1f366444,
        P = undefined,
        FAIL = True
    }
]
                    
property AES256UnwrapTest_00 = CheckAES256UnwrapVector (AES256UnwrapTestVectors@0)
property AES256UnwrapTest_01 = CheckAES256UnwrapVector (AES256UnwrapTestVectors@1)
property AES256UnwrapTest_02 = CheckAES256UnwrapVector (AES256UnwrapTestVectors@2)
property AES256UnwrapTest_03 = CheckAES256UnwrapVector (AES256UnwrapTestVectors@3)
property AES256UnwrapTest_04 = CheckAES256UnwrapVector (AES256UnwrapTestVectors@4)
