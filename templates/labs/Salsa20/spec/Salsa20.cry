module labs::Salsa20::spec::Salsa20 where

Salsa20Encrypt :
    {a, l}
    (a >= 1, 2 >= a, l <= 2^^70) =>
    Bytes (16*a) -> Bytes 8 -> Bytes l -> Bytes l
Salsa20Encrypt k v m = c
  where
    c = m ^ take (join [ Salsa20Expansion k (v # littleendian' i)
                       | i <- [0 .. 2^^64-1 ] ])
private

  type Bytes n = [n][8]
  type Words n = [n][32]

  quarterround : Words 4 -> Words 4
  quarterround [y0, y1, y2, y3] = [z0, z1, z2, z3] where
      z1 = y1 ^ ((y0 + y3) <<< 7)
      z2 = y2 ^ ((z1 + y0) <<< 9)
      z3 = y3 ^ ((z2 + z1) <<< 13)
      z0 = y0 ^ ((z3 + z2) <<< 18)

  property quarterroundExamplesProp =
      (quarterround [0x00000000, 0x00000000, 0x00000000, 0x00000000]
                 == [0x00000000, 0x00000000, 0x00000000, 0x00000000]) /\
      (quarterround [0x00000001, 0x00000000, 0x00000000, 0x00000000]
                 == [0x08008145, 0x00000080, 0x00010200, 0x20500000]) /\
      (quarterround [0x00000000, 0x00000001, 0x00000000, 0x00000000]
                 == [0x88000100, 0x00000001, 0x00000200, 0x00402000]) /\
      (quarterround [0x00000000, 0x00000000, 0x00000001, 0x00000000]
                 == [0x80040000, 0x00000000, 0x00000001, 0x00002000]) /\
      (quarterround [0x00000000, 0x00000000, 0x00000000, 0x00000001]
                 == [0x00048044, 0x00000080, 0x00010000, 0x20100001]) /\
      (quarterround [0xe7e8c006, 0xc4f9417d, 0x6479b4b2, 0x68c67137]
                 == [0xe876d72b, 0x9361dfd5, 0xf1460244, 0x948541a3]) /\
      (quarterround [0xd3917c5b, 0x55f1c407, 0x52a58a7a, 0x8f887a3b]
                 == [0x3e2f308c, 0xd90a8f36, 0x6ab2a923, 0x2883524c])

  property quarterroundIsInjectiveProp x x' =
      x != x' ==> quarterround x != quarterround x'

  rowround : Words 16 -> Words 16
  rowround [y0, y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15] =
      [z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15]
    where
      [ z0,  z1,  z2,  z3] = quarterround [ y0,  y1,  y2,  y3]
      [ z5,  z6,  z7,  z4] = quarterround [ y5,  y6,  y7,  y4]
      [z10, z11,  z8,  z9] = quarterround [y10, y11,  y8,  y9]
      [z15, z12, z13, z14] = quarterround [y15, y12, y13, y14]

  property rowroundExamplesProp =
      (rowround [0x00000001, 0x00000000, 0x00000000, 0x00000000,
                 0x00000001, 0x00000000, 0x00000000, 0x00000000,
                 0x00000001, 0x00000000, 0x00000000, 0x00000000,
                 0x00000001, 0x00000000, 0x00000000, 0x00000000]
             == [0x08008145, 0x00000080, 0x00010200, 0x20500000,
                 0x20100001, 0x00048044, 0x00000080, 0x00010000,
                 0x00000001, 0x00002000, 0x80040000, 0x00000000,
                 0x00000001, 0x00000200, 0x00402000, 0x88000100]) /\
      (rowround [0x08521bd6, 0x1fe88837, 0xbb2aa576, 0x3aa26365,
                 0xc54c6a5b, 0x2fc74c2f, 0x6dd39cc3, 0xda0a64f6,
                 0x90a2f23d, 0x067f95a6, 0x06b35f61, 0x41e4732e,
                 0xe859c100, 0xea4d84b7, 0x0f619bff, 0xbc6e965a]
             == [0xa890d39d, 0x65d71596, 0xe9487daa, 0xc8ca6a86,
                 0x949d2192, 0x764b7754, 0xe408d9b9, 0x7a41b4d1,
                 0x3402e183, 0x3c3af432, 0x50669f96, 0xd89ef0a8,
                 0x0040ede5, 0xb545fbce, 0xd257ed4f, 0x1818882d])

  columnround : Words 16 -> Words 16
  columnround [x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15] =
      [y0, y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15]
    where
      [ y0,  y4,  y8, y12] = quarterround [ x0,  x4,  x8, x12]
      [ y5,  y9, y13,  y1] = quarterround [ x5,  x9, x13,  x1]
      [y10, y14,  y2,  y6] = quarterround [x10, x14,  x2,  x6]
      [y15,  y3,  y7, y11] = quarterround [x15,  x3,  x7, x11]

  property columnroundExamplesProp =
      (columnround [0x00000001, 0x00000000, 0x00000000, 0x00000000,
                    0x00000001, 0x00000000, 0x00000000, 0x00000000,
                    0x00000001, 0x00000000, 0x00000000, 0x00000000,
                    0x00000001, 0x00000000, 0x00000000, 0x00000000]
                == [0x10090288, 0x00000000, 0x00000000, 0x00000000,
                    0x00000101, 0x00000000, 0x00000000, 0x00000000,
                    0x00020401, 0x00000000, 0x00000000, 0x00000000,
                    0x40a04001, 0x00000000, 0x00000000, 0x00000000]) /\
      (columnround [0x08521bd6, 0x1fe88837, 0xbb2aa576, 0x3aa26365,
                    0xc54c6a5b, 0x2fc74c2f, 0x6dd39cc3, 0xda0a64f6,
                    0x90a2f23d, 0x067f95a6, 0x06b35f61, 0x41e4732e,
                    0xe859c100, 0xea4d84b7, 0x0f619bff, 0xbc6e965a]
                == [0x8c9d190a, 0xce8e4c90, 0x1ef8e9d3, 0x1326a71a,
                    0x90a20123, 0xead3c4f3, 0x63a091a0, 0xf0708d69,
                    0x789b010c, 0xd195a681, 0xeb7d5504, 0xa774135c,
                    0x481c2027, 0x53a8e4b5, 0x4c1f89c5, 0x3f78c9c8])

  property columnroundIsTransposeOfRowround ys =
      columnround ys == rejigger (rowround (rejigger ys))
    where
      rejigger a = join (transpose (split`{4} a))

  doubleround : Words 16 -> Words 16
  doubleround xs = rowround (columnround xs)

  property doubleroundExamplesProp =
      (doubleround [0x00000001, 0x00000000, 0x00000000, 0x00000000,
                    0x00000000, 0x00000000, 0x00000000, 0x00000000,
                    0x00000000, 0x00000000, 0x00000000, 0x00000000,
                    0x00000000, 0x00000000, 0x00000000, 0x00000000]
                == [0x8186a22d, 0x0040a284, 0x82479210, 0x06929051,
                    0x08000090, 0x02402200, 0x00004000, 0x00800000,
                    0x00010200, 0x20400000, 0x08008104, 0x00000000,
                    0x20500000, 0xa0000040, 0x0008180a, 0x612a8020]) /\
      (doubleround [0xde501066, 0x6f9eb8f7, 0xe4fbbd9b, 0x454e3f57,
                    0xb75540d3, 0x43e93a4c, 0x3a6f2aa0, 0x726d6b36,
                    0x9243f484, 0x9145d1e8, 0x4fa9d247, 0xdc8dee11,
                    0x054bf545, 0x254dd653, 0xd9421b6d, 0x67b276c1]
                == [0xccaaf672, 0x23d960f7, 0x9153e63a, 0xcd9a60d0,
                    0x50440492, 0xf07cad19, 0xae344aa0, 0xdf4cfdfc,
                    0xca531c29, 0x8e7943db, 0xac1680cd, 0xd503ca00,
                    0xa74b2ad6, 0xbc331c5c, 0x1dda24c7, 0xee928277])

  littleendian : Bytes 4 -> [32]
  littleendian [b0, b1, b2, b3] = join [b3, b2, b1, b0]

  property littleendianExamplesProp =
      (littleendian [  0,   0,   0,   0] == 0x00000000) /\
      (littleendian [ 86,  75,  30,   9] == 0x091e4b56) /\
      (littleendian [255, 255, 255, 250] == 0xfaffffff)

  littleendian' : {n} (fin n) => [n*8] -> Bytes n
  littleendian' w = reverse (split w)

  property littleendianInverseProp b = littleendian' (littleendian b) == b

  Salsa20Core : Bytes 64 -> Bytes 64
  Salsa20Core x = x'
    where
      xs    = map littleendian (split x)
      zs    = (iterate doubleround xs)@10
      x'    = join (map littleendian' (xs + zs))

  property Salsa20CoreExamplesProp =
      (Salsa20Core [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]
                == [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]) /\
      (Salsa20Core [211, 159,  13, 115,  76,  55,  82, 183,   3, 117, 222,  37, 191, 187, 234, 136,
                     49, 237, 179,  48,   1, 106, 178, 219, 175, 199, 166,  48,  86,  16, 179, 207,
                     31, 240,  32,  63,  15,  83,  93, 161, 116, 147,  48, 113, 238,  55, 204,  36,
                     79, 201, 235,  79,   3,  81, 156,  47, 203,  26, 244, 243,  88, 118, 104,  54]
                == [109,  42, 178, 168, 156, 240, 248, 238, 168, 196, 190, 203,  26, 110, 170, 154,
                     29,  29, 150,  26, 150,  30, 235, 249, 190, 163, 251,  48,  69, 144,  51,  57,
                    118,  40, 152, 157, 180,  57,  27,  94, 107,  42, 236,  35,  27, 111, 114, 114,
                    219, 236, 232, 135, 111, 155, 110,  18,  24, 232,  95, 158, 179,  19,  48, 202]) /\
      (Salsa20Core [ 88, 118, 104,  54,  79, 201, 235,  79,   3,  81, 156,  47, 203,  26, 244, 243,
                    191, 187, 234, 136, 211, 159,  13, 115,  76,  55,  82, 183,   3, 117, 222,  37,
                     86,  16, 179, 207,  49, 237, 179,  48,   1, 106, 178, 219, 175, 199, 166,  48,
                    238,  55, 204,  36,  31, 240,  32,  63,  15,  83,  93, 161, 116, 147,  48, 113]
                == [179,  19,  48, 202, 219, 236, 232, 135, 111, 155, 110,  18,  24, 232,  95, 158,
                     26, 110, 170, 154, 109,  42, 178, 168, 156, 240, 248, 238, 168, 196, 190, 203,
                     69, 144,  51,  57,  29,  29, 150,  26, 150,  30, 235, 249, 190, 163, 251,  48,
                     27, 111, 114, 114, 118,  40, 152, 157, 180,  57,  27,  94, 107,  42, 236,  35])

  Salsa20Expansion :
      {a}
      (a >= 1, 2 >= a) =>
      Bytes (16*a) -> Bytes 16 -> Bytes 64
  Salsa20Expansion k n = z
    where
      [s0, s1, s2, s3] = split "expand 32-byte k"
      [t0, t1, t2, t3] = split "expand 16-byte k"
      (k0 # k1) = k # undefined
      x = if (`a : [2]) == 1
          then t0 # k0 # t1 # n # t2 # k0 # t3
          else s0 # k0 # s1 # n # s2 # k1 # s3
      z = Salsa20Core x

  property Salsa20ExpansionExamplesProp =
      (Salsa20Expansion (k0#k1) n ==
      [ 69,  37,  68,  39,  41,  15, 107, 193, 255, 139, 122,   6, 170, 233, 217,  98,
        89, 144, 182, 106,  21,  51, 200,  65, 239,  49, 222,  34, 215, 114,  40, 126,
       104, 197,   7, 225, 197, 153,  31,   2, 102,  78,  76, 176,  84, 245, 246, 184,
       177, 160, 133, 130,   6,  72, 149, 119, 192, 195, 132, 236, 234, 103, 246,  74]) /\
      (Salsa20Expansion k0 n ==
      [ 39, 173,  46, 248,  30, 200,  82,  17,  48,  67, 254, 239,  37,  18,  13, 247,
       241, 200,  61, 144,  10,  55,  50, 185,   6,  47, 246, 253, 143,  86, 187, 225,
       134,  85, 110, 246, 161, 163,  43, 235, 231,  94, 171,  51, 145, 214, 112,  29,
        14, 232,   5,  16, 151, 140, 183, 141, 171,   9, 122, 181, 104, 182, 177, 193])
    where
      k0 = [1 .. 16]
      k1 = [201 .. 216]
      n  = [101 .. 116]

  property Salsa20EncryptExamplesProp =
      (Salsa20Encrypt [0x00, 0x53, 0xa6, 0xf9, 0x4c, 0x9f, 0xf2, 0x45,
                       0x98, 0xeb, 0x3e, 0x91, 0xe4, 0x37, 0x8a, 0xdd]
                      [0x0d, 0x74, 0xdb, 0x42, 0xa9, 0x10, 0x77, 0xde]
                      [0x46, 0x82, 0x39, 0x77, 0xf3, 0x81, 0xae, 0xd3,
                       0x53, 0x45, 0x2c, 0x2f, 0xf2, 0x10, 0xfd, 0xfa,
                       0x11, 0x44, 0x74, 0x3d, 0x23, 0xf1, 0xf0, 0xdb,
                       0x6e, 0x99, 0x86, 0x73, 0xba, 0x23, 0xee, 0xfb,
                       0xff, 0xde, 0xc0, 0x35, 0x03, 0x31, 0x47, 0x70,
                       0x6d, 0x58, 0x38, 0x88, 0x2d, 0xa7, 0x66, 0xb8,
                       0x2d, 0xb5, 0x88, 0xa0, 0x19, 0x76, 0x92, 0xcd,
                       0x32, 0x24, 0x5b, 0xcc, 0x9d, 0xba, 0x2d, 0x2e]
                   == [0x43, 0x63, 0xde, 0xc9, 0x45, 0x16, 0x77, 0x4a,
                       0x36, 0x2e, 0xdf, 0x53, 0xe9, 0x87, 0x75, 0xfc,
                       0x62, 0x19, 0x7f, 0xad, 0x19, 0x91, 0xf7, 0x66,
                       0x5c, 0x00, 0xa1, 0x9c, 0x04, 0x38, 0xe0, 0xd1,
                       0x7e, 0xe9, 0x01, 0x9b, 0x2a, 0x25, 0xd4, 0xda,
                       0xee, 0xf0, 0x19, 0xfd, 0x76, 0x49, 0x6d, 0xbe,
                       0xe0, 0xa1, 0x0d, 0xfa, 0x7e, 0x92, 0xf5, 0xce,
                       0xd9, 0xdc, 0xa8, 0xdd, 0xd6, 0xe2, 0x61, 0x94]) /\
      (Salsa20Encrypt [0x0a, 0x5d, 0xb0, 0x03, 0x56, 0xa9, 0xfc, 0x4f,
                       0xa2, 0xf5, 0x48, 0x9b, 0xee, 0x41, 0x94, 0xe7,
                       0x3a, 0x8d, 0xe0, 0x33, 0x86, 0xd9, 0x2c, 0x7f,
                       0xd2, 0x25, 0x78, 0xcb, 0x1e, 0x71, 0xc4, 0x17]
                      [0x1f, 0x86, 0xed, 0x54, 0xbb, 0x22, 0x89, 0xf0]
                      [0x5f, 0xb7, 0x9d, 0xab, 0xec, 0x06, 0x21, 0xd8,
                       0x76, 0x1e, 0x37, 0x00, 0x86, 0xfe, 0x0a, 0xea,
                       0x0b, 0x4e, 0x92, 0x19, 0x27, 0x1f, 0x6a, 0x24,
                       0xda, 0x29, 0xe6, 0x87, 0x9b, 0x8b, 0x8a, 0x72,
                       0xb7, 0xa2, 0xae, 0x2b, 0x52, 0x9e, 0x82, 0x15,
                       0x89, 0xd0, 0x0a, 0xf9, 0x3b, 0xcf, 0x9e, 0x4f,
                       0x76, 0x6b, 0xff, 0x8b, 0x29, 0x57, 0xd5, 0x38,
                       0x7d, 0x8c, 0x22, 0x88, 0x38, 0x18, 0x26, 0x4c]
                   == [0x60, 0x5f, 0xc0, 0xf0, 0x5d, 0x90, 0x2b, 0x5a,
                       0x3e, 0x15, 0x69, 0x6f, 0xc8, 0x68, 0x50, 0xae,
                       0x6b, 0x99, 0x37, 0x5c, 0x26, 0x79, 0x25, 0x59,
                       0xba, 0x9c, 0xad, 0x81, 0x8b, 0x81, 0xbd, 0x8d,
                       0x6b, 0x54, 0x13, 0xce, 0x9c, 0xa1, 0xca, 0x93,
                       0x33, 0xa7, 0xd7, 0xa2, 0x7f, 0x26, 0xc8, 0x0b,
                       0x92, 0x61, 0x75, 0x4d, 0x71, 0x56, 0xc0, 0x65,
                       0xc4, 0x83, 0x20, 0xda, 0x13, 0x7c, 0x66, 0x6f])
