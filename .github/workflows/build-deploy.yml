name: Build and Deploy
on:
  push:
    branches:
      - navlinks # change to `master` before merging
jobs:
  build-docs:
    name: Build `docs`
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.1
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.4
      - name: Generate `docs`
        run: |
          ${GITHUB_WORKSPACE}/scripts/layercake/generate.sh
      - name: Check that `docs` exists
        run: |
          [ -d ${GITHUB_WORKSPACE}/docs ] && echo "/docs exists" || exit 1
      - name: Upload `docs` artifact
        uses: actions/upload-artifact@v2
        with:
          name: docs-artifact
          path: docs
  test-docs:
    name: Test `docs` on Ubuntu
    needs: build-docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download `docs` artifact
        uses: actions/download-artifact@v2
        with:
          name: docs-artifact
          path: docs
      - name: Install package dependencies (if not already present)
        run: |
          sudo apt-get install libgmp-dev libncurses-dev
      - name: Make directory for Cryptol/SAW/Z3 binaries
        run: |
          mkdir deps
      - name: Install Cryptol 2.10.0
        run: |
          cd deps
          wget -q https://github.com/GaloisInc/cryptol/releases/download/2.10.0/cryptol-2.10.0-Linux-x86_64.tar.gz
          tar -xzf cryptol-2.10.0-Linux-x86_64.tar.gz
          rm cryptol-2.10.0-Linux-x86_64.tar.gz
          chmod +x cryptol-2.10.0-Linux-x86_64/bin/cryptol
          echo "$(pwd)/cryptol-2.10.0-Linux-x86_64/bin" >> $GITHUB_PATH
      - name: Install SAW 0.6
        run: |
          cd deps
          wget -q https://github.com/GaloisInc/saw-script/releases/download/v0.6/saw-0.6-Linux-x86_64.tar.gz
          tar -xzf saw-0.6-Linux-x86_64.tar.gz
          rm saw-0.6-Linux-x86_64.tar.gz
          chmod +x saw-0.6-Linux-x86_64/bin/saw
          echo "$(pwd)/saw-0.6-Linux-x86_64/bin" >> $GITHUB_PATH
      - name: Install Z3 4.8.8
        run: |
          cd deps
          curl -fsSL https://github.com/Z3Prover/z3/releases/download/z3-4.8.8/z3-4.8.8-x64-ubuntu-16.04.zip -o z3-4.8.8-x64-ubuntu-16.04.zip
          unzip -j z3-4.8.8-x64-ubuntu-16.04.zip -d z3-4.8.8-x64-ubuntu-16.04
          rm z3-4.8.8-x64-ubuntu-16.04.zip
          chmod +x z3-4.8.8-x64-ubuntu-16.04/z3
          echo "$(pwd)/z3-4.8.8-x64-ubuntu-16.04" >> $GITHUB_PATH
      - name: Check Dependency Versions
        run: |
          cryptol --version
          saw --version
          z3 --version
      - name: Set CRYPTOLPATH to `docs`
        run: |
          echo "CRYPTOLPATH=${GITHUB_WORKSPACE}/docs" >> $GITHUB_ENV
      - name: Run test script
        run: |
          ${GITHUB_WORKSPACE}/scripts/test_cryptol_modules.sh
  test-docs-docker:
    name: Test `docs` on Cryptol Docker image
    needs: build-docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download `docs` artifact
        uses: actions/download-artifact@v2
        with:
          name: docs-artifact
          path: docs
      - name: Pull Cryptol Docker image
        run: |
          docker pull galoisinc/cryptol:2.10.0
      - name: Test Cryptol commands in Docker image
        run: |
          cd ${GITHUB_WORKSPACE}/docs
          shopt -s expand_aliases
          alias cryptol='docker run --entrypoint cryptol -v $(pwd):/mnt/cryptol-course --env CRYPTOLPATH=/mnt/cryptol-course galoisinc/cryptol:2.10.0'
          source ${GITHUB_WORKSPACE}/scripts/test_cryptol_modules.sh
  deploy:
    name: Build `gh-pages` and deploy (along with `docs`)
    runs-on: ubuntu-latest
    needs: [test-docs, test-docs-docker]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download `docs` artifact
        uses: actions/download-artifact@v2
        with:
          name: docs-artifact
          path: docs
      - name: Generate `gh-pages`
        run: |
          #!/bin/bash
          [ -d ${GITHUB_WORKSPACE}/docs/ ] && echo "/docs exists" || exit 1
          cp -r ${GITHUB_WORKSPACE}/docs/ ${GITHUB_WORKSPACE}/gh-pages/
          shopt -s extglob
          sed -i "s/\.md/\.html/" ${GITHUB_WORKSPACE}/gh-pages/misc/*.@(gv|svg)
          [ -d ${GITHUB_WORKSPACE}/gh-pages/ ] && echo "/gh-pages exists" || exit 1
      - name: Deploy `docs`
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: docs
          FOLDER: docs
          CLEAN: true
      - name: Deploy `gh-pages`
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: gh-pages
          CLEAN: true
