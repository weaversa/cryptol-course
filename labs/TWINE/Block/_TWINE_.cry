/* *
 * TWINE: A Lightweight, Versatile Block Cipher
 * Tomoyasu Suzaki, Kazuhiko Minematsu, Sumio Morioka, and Eita Kobayashi
 * NEC Corporation, 1753 Shimonumabe, Nakahara-Ku, Kawasaki, Japan
 * https://www.nec.com/en/global/rd/tg/code/symenc/pdf/twine_LC11.pdf
 */
module labs::TWINE::Block::_TWINE_ = labs::TWINE::Block_ where

import labs::TWINE::Block::TWINE_Common as Common

parameter
  /** indicates TWINE key length: 0 -> 80, 1 -> 128 */
  type _k: #
  /** key length must be 80 (_k=0) or 128 (_k=1) */
  type constraint 1 >= _k

  /** "Round key `RK:[32*36]` is derived from the secret key, `K:[n]` with `n âˆˆ {80, 128}`, using the key schedule." */
  _keySchedule: Common::KeySchedule _k


// other definitions (not parameters, not exported)

/** type signature of block crypto operations */
type __Op = _Key -> Common::Block -> Common::Block


// parameter instantiations

/** "TWINE is a ... block cipher with two supported key lengths, 80 and 128 bits." */
type _Key = Common::Key _k
/** "TWINE is a 64-bit block cipher..." */
type _Block = Common::Block

/** encrypt plaintext using key schedule generated from secret key */
_encrypt: __Op
_encrypt key pt = Common::Enc (_keySchedule key) pt
/** decrypt ciphertext using key schedule generated from secret key */
_decrypt: __Op
_decrypt key ct = Common::Dec (_keySchedule key) ct
